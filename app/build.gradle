plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

Properties properties = new Properties()
if (rootProject.file("local.properties").exists()) {
    properties.load(rootProject.file("local.properties").newDataInputStream())
}

def apiKey = properties.getProperty("API_KEY") ?: ""
def baseUrl = properties.getProperty("BASE_URL") ?: ""
def imageURL = properties.getProperty("IMAGE_URL") ?: ""

android {
    namespace 'io.rrohaill.cleanweatherapp'
    compileSdk 33

    defaultConfig {
        applicationId "io.rrohaill.cleanweatherapp"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        vectorDrawables.useSupportLibrary = true

        buildConfigField("String", "API_KEY", apiKey)
        buildConfigField("String", "BASE_URL", baseUrl)
        buildConfigField("String", "IMAGE_URL", imageURL)
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    //kotlin
    implementation 'androidx.core:core-ktx:1.9.0'

    //lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    //compose
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"

    //material
    implementation 'androidx.compose.material:material:1.3.1'
    implementation "androidx.compose.material3:material3:1.1.0-alpha03"

    //viewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.0-alpha03")

    //Google accompanist permissions
    implementation 'com.google.accompanist:accompanist-permissions:0.28.0'

    //coil
    implementation "io.coil-kt:coil-compose:1.4.0"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

    //Hilt dependency injection
    implementation("com.google.dagger:hilt-android:2.44.2")
    kapt("com.google.dagger:hilt-android-compiler:2.44.2")

    //testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    //mockito testing
    testImplementation 'org.mockito:mockito-core:4.6.1'
    testImplementation 'org.mockito:mockito-inline:4.6.1'
    testImplementation 'org.mockito:mockito-android:4.6.1'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    implementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    implementation 'com.squareup.retrofit2:retrofit-mock:2.9.0'
}